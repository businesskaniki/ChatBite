name: django

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black
      - name: Lint with Flake8
        run: |
          flake8 .
      - name: Format with Black
        run: |
          black .

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          python manage.py test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'us-west-2'
      AWS_ECS_CLUSTER: 'my-ecs-cluster'
      AWS_ECS_SERVICE: 'my-ecs-service'
      DOCKER_REGISTRY_URL: 'my-docker-registry-url'
      DOCKER_IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY_URL }}/my-django-app:${{ env.DOCKER_IMAGE_TAG }}
      - name: Deploy to ECS
        uses: einaregilsson/ecs-deploy@v2
        with:
          access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          cluster: ${{ env.AWS_ECS_CLUSTER }}
          service: ${{ env.AWS_ECS_SERVICE }}
          image: ${{ env.DOCKER_REGISTRY_URL }}/my-django-app:${{ env.DOCKER_IMAGE_TAG }}
